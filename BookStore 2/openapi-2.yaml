openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8080
    description: Generated server url
paths:
  /publisher:
    get:
      tags:
        - publisher-controller
      operationId: getpublisherk
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Publisher'
    put:
      tags:
        - publisher-controller
      operationId: putpublisherr
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Publisher'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Publisher'
    post:
      tags:
        - publisher-controller
      operationId: postpublisher
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Publisher'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Publisher'
  /author:
    get:
      tags:
        - author-controller
      operationId: getAuthor
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Author'
    put:
      tags:
        - author-controller
      operationId: putAuthor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Author'
    post:
      tags:
        - author-controller
      operationId: addAuthor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Author'
  /Book:
    get:
      tags:
        - book-controller
      operationId: getBook
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
    put:
      tags:
        - book-controller
      operationId: putBook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Book'
    post:
      tags:
        - book-controller
      operationId: postBook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Book'
  /publisher/{publisherid}:
    get:
      tags:
        - publisher-controller
      operationId: getpublisher
      parameters:
        - name: publisherid
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Publisher'
    delete:
      tags:
        - publisher-controller
      operationId: deletePublisherById
      parameters:
        - name: publisherid
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: No Content
  /author/{authorId}:
    get:
      tags:
        - author-controller
      operationId: getAuthor_1
      parameters:
        - name: authorId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Author'
    delete:
      tags:
        - author-controller
      operationId: DeleteAuthor
      parameters:
        - name: authorId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: No Content
  /Book/{Bookid}:
    get:
      tags:
        - book-controller
      operationId: getBook_1
      parameters:
        - name: Bookid
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Book'
    delete:
      tags:
        - book-controller
      operationId: DeleteBook
      parameters:
        - name: Bookid
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: No Content
  /Book/author/{author_id}:
    get:
      tags:
        - book-controller
      operationId: getByAuthor_id
      parameters:
        - name: author_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
components:
  schemas:
    Publisher:
      type: object
      properties:
        publisher_id:
          type: integer
          format: int32
        name:
          type: string
        street:
          type: string
        city:
          type: string
        state:
          type: string
        postal_code:
          type: string
        phone:
          type: string
        email:
          type: string
    Author:
      type: object
      properties:
        author_id:
          type: integer
          format: int32
        first_name:
          type: string
        last_name:
          type: string
        street:
          type: string
        city:
          type: string
        state:
          type: string
        postal_code:
          type: string
        phone:
          type: string
        email:
          type: string
    Book:
      type: object
      properties:
        book_id:
          type: integer
          format: int32
        isbn:
          type: string
        publish_date:
          type: string
          format: date-time
        title:
          type: string
        publisher_id:
          type: integer
          format: int32
        price:
          type: number
        author_id:
          type: integer
          format: int32
